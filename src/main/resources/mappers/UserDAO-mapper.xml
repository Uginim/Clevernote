<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.UserDAO-mapper">

<!-- create -->
	<insert id="insertNewUser" parameterType="UserVO" >
		INSERT INTO app_user (email, created_at, username,pwhash,user_num)
		values (#{email},SYSTIMESTAMP,#{username},#{pwHash},USER_SEQUENCE.nextval)
		<selectKey keyProperty="userNum" order="AFTER" resultType="long">
			SELECT USER_SEQUENCE.currval FROM dual
		</selectKey> 
	</insert>
	
<!-- Read -->
	<select id="selectOneUserByEmail" parameterType="String" resultType="UserVO">
		SELECT 
			email,
			created_at AS "createdAt",
			updated_at AS "updatedAt",
			username,
			pwhash AS "pwHash",
			user_num AS "userNum"
		FROM app_user 
		WHERE email=#{email}
	</select>
	
	<select id="selectOneUserByEmailAndPw" parameterType="map" resultType="UserVO">
		SELECT 
			email,
			created_at AS "createdAt",
			updated_at AS "updatedAt",
			username,
			pwhash AS "pwHash",
			user_num
		FROM app_user 
		WHERE email=#{email} AND pwHash = #{pwHash}
	</select>
	
	<select id="selectOneUserByUserNum" parameterType="long" resultType="UserVO">
		SELECT 
			email,
			created_at AS "createdAt",
			updated_at AS "updatedAt",
			username,
			pwhash AS "pwHash",
			user_num AS "userNum"
		FROM app_user 
		WHERE user_num=#{userNum}
	</select>
	
	<select id="selectAllUsersByUsername" parameterType="map" resultType="UserVO">
		SELECT 
			email,
			created_at AS "createdAt",
			updated_at AS "updatedAt",
			username,
			pwhash AS "pwHash",
			user_num
		FROM app_user
		WHERE username=#{username}		
	</select>
	
	<select id="selectAllUsersIncludekeywordOracle" parameterType="map" resultType="UserVO">
		SELECT 
			email,
			created_at AS "createdAt",
			updated_at AS "updatedAt",
			username,
			pwhash AS "pwHash",
			user_num
		FROM app_user
		WHERE username like '%' || #{username} ||'%'		
	</select>
	
	
<!-- Update -->
	<update id="updateUserInfoExceptPW" parameterType="UserVO">
		UPDATE app_user 
			SET username = #{username}, 
				updated_at = SYSTIMESTAMP 
		WHERE email = #{email} 
	</update>
	<update id="updateUserPwHash" parameterType="map">
		UPDATE app_user
			SET pwHash = #{pwHash}
		WHERE email = #{email}
	</update>
	<update id="updateUserPwHashWithOldPw" parameterType="map">
		UPDATE app_user
			SET pwHash = #{newPwHash}
		WHERE email = #{email}
		AND pwHash = #{oldPwHash}
	</update>

	<!-- Delete	 -->
	<delete id="deleteUserByEmail" parameterType="string" >
		DELETE FROM app_user WHERE email=#{email}
	</delete>
	<delete id="deleteUserByEmailAndPw" parameterType="map" >
		DELETE FROM app_user WHERE email=#{email} AND pw=#{pw}
	</delete>

	<!-- util -->
	<select id="getLastUserSequence">
	SELECT LAST_NUMBER 
	FROM USER_SEQUENCES 
	WHERE SEQUENCE_NAME = 'user_sequence';
	</select>

</mapper>